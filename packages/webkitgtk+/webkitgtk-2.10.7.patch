diff -Naur webkitgtk-2.10.7/Source/JavaScriptCore/assembler/MacroAssemblerARM.cpp webkitgtk-2.10.7/Source/JavaScriptCore/assembler/MacroAssemblerARM.cpp
--- webkitgtk-2.10.7/Source/JavaScriptCore/assembler/MacroAssemblerARM.cpp	2016-01-29 21:59:32.000000000 +0530
+++ webkitgtk-2.10.7/Source/JavaScriptCore/assembler/MacroAssemblerARM.cpp	2016-02-25 21:42:09.000000000 +0530
@@ -31,20 +31,22 @@
 
 #include "MacroAssemblerARM.h"
 
-#if OS(LINUX)
+#if OS(LINUX) && !defined(__ANDROID__)
 #include <sys/types.h>
 #include <sys/stat.h>
 #include <fcntl.h>
 #include <unistd.h>
 #include <elf.h>
 #include <asm/hwcap.h>
+#elif defined(__ANDROID__)
+#include <machine/cpu-features.h>
 #endif
 
 namespace JSC {
 
 static bool isVFPPresent()
 {
-#if OS(LINUX)
+#if OS(LINUX) && !defined(__ANDROID__)
     int fd = open("/proc/self/auxv", O_RDONLY);
     if (fd != -1) {
         Elf32_auxv_t aux;
@@ -56,6 +58,14 @@
         }
         close(fd);
     }
+#elif defined(__ANDROID__)
+
+#ifdef __ARM_HAVE_VFP
+    return true;
+#else
+    return false;
+#endif
+    
 #endif // OS(LINUX)
 
 #if (COMPILER(GCC_OR_CLANG) && defined(__VFP_FP__))
diff -Naur webkitgtk-2.10.7/Source/JavaScriptCore/runtime/MathObject.cpp webkitgtk-2.10.7/Source/JavaScriptCore/runtime/MathObject.cpp
--- webkitgtk-2.10.7/Source/JavaScriptCore/runtime/MathObject.cpp	2016-01-29 21:59:32.000000000 +0530
+++ webkitgtk-2.10.7/Source/JavaScriptCore/runtime/MathObject.cpp	2016-02-25 08:25:04.000000000 +0530
@@ -355,6 +355,9 @@
 
 EncodedJSValue JSC_HOST_CALL mathProtoFuncLog2(ExecState* exec)
 {
+#ifdef __ANDROID__
+    auto log2 = [](double x) { return log(x) / log(2.); };
+#endif
     return JSValue::encode(jsDoubleNumber(log2(exec->argument(0).toNumber(exec))));
 }
 
diff -Naur webkitgtk-2.10.7/Source/JavaScriptCore/shell/PlatformGTK.cmake webkitgtk-2.10.7/Source/JavaScriptCore/shell/PlatformGTK.cmake
--- webkitgtk-2.10.7/Source/JavaScriptCore/shell/PlatformGTK.cmake	2013-08-03 21:40:38.000000000 +0530
+++ webkitgtk-2.10.7/Source/JavaScriptCore/shell/PlatformGTK.cmake	2016-02-25 08:25:04.000000000 +0530
@@ -1,3 +1,12 @@
+include_directories(./ ${JavaScriptCore_SYSTEM_INCLUDE_DIRECTORIES})
+
+string(REPLACE "-fpic" "" CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS})
+string(REPLACE "-fPIC" "" CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS})
+
+set_source_files_properties(../jsc.cpp PROPERTIES COMPILE_FLAGS -fpic)
+
+SET( CMAKE_EXE_LINKER_FLAGS  "${CMAKE_EXE_LINKER_FLAGS} -pie" )
+
 list(APPEND JSC_LIBRARIES
     ${GLIB_LIBRARIES}
 )
diff -Naur webkitgtk-2.10.7/Source/WTF/wtf/Assertions.cpp webkitgtk-2.10.7/Source/WTF/wtf/Assertions.cpp
--- webkitgtk-2.10.7/Source/WTF/wtf/Assertions.cpp	2016-01-29 21:59:32.000000000 +0530
+++ webkitgtk-2.10.7/Source/WTF/wtf/Assertions.cpp	2016-02-25 08:25:04.000000000 +0530
@@ -71,7 +71,9 @@
 #if OS(DARWIN) || (OS(LINUX) && !defined(__UCLIBC__))
 #include <cxxabi.h>
 #include <dlfcn.h>
-#include <execinfo.h>
+#  ifndef __ANDROID__
+#  include <execinfo.h>
+#  endif
 #endif
 
 extern "C" {
@@ -225,7 +227,7 @@
 
 void WTFGetBacktrace(void** stack, int* size)
 {
-#if OS(DARWIN) || (OS(LINUX) && !defined(__UCLIBC__))
+#if OS(DARWIN) || (OS(LINUX) && !defined(__UCLIBC__) && !defined(__ANDROID__))
     *size = backtrace(stack, *size);
 #elif OS(WINDOWS)
     // The CaptureStackBackTrace function is available in XP, but it is not defined
diff -Naur webkitgtk-2.10.7/Source/WTF/wtf/Platform.h webkitgtk-2.10.7/Source/WTF/wtf/Platform.h
--- webkitgtk-2.10.7/Source/WTF/wtf/Platform.h	2016-01-29 21:59:32.000000000 +0530
+++ webkitgtk-2.10.7/Source/WTF/wtf/Platform.h	2016-02-25 08:25:04.000000000 +0530
@@ -590,7 +590,6 @@
 
 #if OS(UNIX)
 #define HAVE_ERRNO_H 1
-#define HAVE_LANGINFO_H 1
 #define HAVE_MMAP 1
 #define HAVE_SIGNAL_H 1
 #define HAVE_STRINGS_H 1
@@ -599,6 +598,11 @@
 #define USE_PTHREADS 1
 #endif /* OS(UNIX) */
 
+#if OS(UNIX) && !defined(__ANDROID__)
+#define HAVE_LANGINFO_H 1
+#else
+#endif
+
 #if (OS(FREEBSD) || OS(OPENBSD)) && !defined(__GLIBC__)
 #define HAVE_PTHREAD_NP_H 1
 #endif
@@ -622,6 +626,9 @@
 #if !OS(WINDOWS) && !OS(SOLARIS)
 #define HAVE_TM_GMTOFF 1
 #define HAVE_TM_ZONE 1
+#endif
+
+#if !defined(__ANDROID__)
 #define HAVE_TIMEGM 1
 #endif
 
diff -Naur webkitgtk-2.10.7/Source/WTF/wtf/PlatformGTK.cmake webkitgtk-2.10.7/Source/WTF/wtf/PlatformGTK.cmake
--- webkitgtk-2.10.7/Source/WTF/wtf/PlatformGTK.cmake	2016-01-29 21:59:32.000000000 +0530
+++ webkitgtk-2.10.7/Source/WTF/wtf/PlatformGTK.cmake	2016-02-25 21:30:51.000000000 +0530
@@ -15,7 +15,7 @@
     ${GLIB_GIO_LIBRARIES}
     ${GLIB_GOBJECT_LIBRARIES}
     ${GLIB_LIBRARIES}
-    pthread
+#    pthread
     ${ZLIB_LIBRARIES}
 )
 
diff -Naur webkitgtk-2.10.7/Source/WTF/wtf/ThreadIdentifierDataPthreads.cpp webkitgtk-2.10.7/Source/WTF/wtf/ThreadIdentifierDataPthreads.cpp
--- webkitgtk-2.10.7/Source/WTF/wtf/ThreadIdentifierDataPthreads.cpp	2016-01-28 14:25:09.000000000 +0530
+++ webkitgtk-2.10.7/Source/WTF/wtf/ThreadIdentifierDataPthreads.cpp	2016-02-25 08:25:04.000000000 +0530
@@ -36,7 +36,7 @@
 
 #include "Threading.h"
 
-#if OS(HURD)
+#if OS(HURD) || defined(__ANDROID__)
 // PTHREAD_KEYS_MAX is not defined in bionic nor in Hurd, so explicitly define it here.
 #define PTHREAD_KEYS_MAX 1024
 #else
diff -Naur webkitgtk-2.10.7/Source/WebCore/CMakeLists.txt webkitgtk-2.10.7/Source/WebCore/CMakeLists.txt
--- webkitgtk-2.10.7/Source/WebCore/CMakeLists.txt	2016-01-29 21:59:32.000000000 +0530
+++ webkitgtk-2.10.7/Source/WebCore/CMakeLists.txt	2016-02-25 23:49:30.000000000 +0530
@@ -3670,7 +3670,7 @@
     WEBKIT_SET_EXTRA_COMPILER_FLAGS(ANGLESupport IGNORECXX_WARNINGS)
 endif ()
 
-target_link_libraries(WebCore ${WebCore_LIBRARIES})
+target_link_libraries(WebCore -Wl,--unresolved-symbols=ignore-in-object-files ${WebCore_LIBRARIES})
 
 if (WebCore_OUTPUT_NAME)
     set_target_properties(WebCore PROPERTIES OUTPUT_NAME ${WebCore_OUTPUT_NAME})
diff -Naur webkitgtk-2.10.7/Source/WebCore/Modules/webaudio/PeriodicWave.cpp webkitgtk-2.10.7/Source/WebCore/Modules/webaudio/PeriodicWave.cpp
--- webkitgtk-2.10.7/Source/WebCore/Modules/webaudio/PeriodicWave.cpp	2016-01-28 14:25:09.000000000 +0530
+++ webkitgtk-2.10.7/Source/WebCore/Modules/webaudio/PeriodicWave.cpp	2016-02-25 08:25:04.000000000 +0530
@@ -99,6 +99,10 @@
 
 void PeriodicWave::waveDataForFundamentalFrequency(float fundamentalFrequency, float* &lowerWaveData, float* &higherWaveData, float& tableInterpolationFactor)
 {
+#ifdef __ANDROID__
+    auto log2f = [](float x) { return (float) (log((double)x) / log(2.)); };
+#endif
+	
     // Negative frequencies are allowed, in which case we alias to the positive frequency.
     fundamentalFrequency = fabsf(fundamentalFrequency);
 
diff -Naur webkitgtk-2.10.7/Source/WebCore/Modules/webaudio/RealtimeAnalyser.cpp webkitgtk-2.10.7/Source/WebCore/Modules/webaudio/RealtimeAnalyser.cpp
--- webkitgtk-2.10.7/Source/WebCore/Modules/webaudio/RealtimeAnalyser.cpp	2015-07-22 18:07:57.000000000 +0530
+++ webkitgtk-2.10.7/Source/WebCore/Modules/webaudio/RealtimeAnalyser.cpp	2016-02-25 08:25:04.000000000 +0530
@@ -77,6 +77,10 @@
 {
     ASSERT(isMainThread());
 
+#ifdef __ANDROID__
+    auto log2 = [](double x) { return log(x) / log(2.); };
+#endif
+
     // Only allow powers of two.
     unsigned log2size = static_cast<unsigned>(log2(size));
     bool isPOT(1UL << log2size == size);
diff -Naur webkitgtk-2.10.7/Source/WebCore/PlatformGTK.cmake webkitgtk-2.10.7/Source/WebCore/PlatformGTK.cmake
--- webkitgtk-2.10.7/Source/WebCore/PlatformGTK.cmake	2016-01-29 21:59:32.000000000 +0530
+++ webkitgtk-2.10.7/Source/WebCore/PlatformGTK.cmake	2016-02-26 08:19:26.000000000 +0530
@@ -512,7 +512,7 @@
     ${GTK_INCLUDE_DIRS}
     ${GDK_INCLUDE_DIRS}
 )
-target_link_libraries(WebCorePlatformGTK
+target_link_libraries(WebCorePlatformGTK -Wl,--unresolved-symbols=ignore-in-object-files
     ${WebCore_LIBRARIES}
     ${GTK_LIBRARIES}
     ${GDK_LIBRARIES}
diff -Naur webkitgtk-2.10.7/Source/WebCore/platform/audio/gstreamer/FFTFrameGStreamer.cpp webkitgtk-2.10.7/Source/WebCore/platform/audio/gstreamer/FFTFrameGStreamer.cpp
--- webkitgtk-2.10.7/Source/WebCore/platform/audio/gstreamer/FFTFrameGStreamer.cpp	2015-07-22 18:07:57.000000000 +0530
+++ webkitgtk-2.10.7/Source/WebCore/platform/audio/gstreamer/FFTFrameGStreamer.cpp	2016-02-25 08:25:04.000000000 +0530
@@ -42,7 +42,11 @@
 // Normal constructor: allocates for a given fftSize.
 FFTFrame::FFTFrame(unsigned fftSize)
     : m_FFTSize(fftSize)
+#ifdef __ANDROID__
+    , m_log2FFTSize(static_cast<unsigned>(log(fftSize) / log(2.)))
+#else
     , m_log2FFTSize(static_cast<unsigned>(log2(fftSize)))
+#endif
     , m_complexData(std::make_unique<GstFFTF32Complex[]>(unpackedFFTDataSize(m_FFTSize)))
     , m_realData(unpackedFFTDataSize(m_FFTSize))
     , m_imagData(unpackedFFTDataSize(m_FFTSize))
diff -Naur webkitgtk-2.10.7/Source/WebCore/platform/graphics/ANGLEWebKitBridge.cpp webkitgtk-2.10.7/Source/WebCore/platform/graphics/ANGLEWebKitBridge.cpp
--- webkitgtk-2.10.7/Source/WebCore/platform/graphics/ANGLEWebKitBridge.cpp	2016-01-28 14:25:09.000000000 +0530
+++ webkitgtk-2.10.7/Source/WebCore/platform/graphics/ANGLEWebKitBridge.cpp	2016-02-25 08:25:04.000000000 +0530
@@ -43,7 +43,13 @@
     
     if (variable.isArray()) {
         for (unsigned i = 0; i < variable.elementCount(); i++) {
+#ifdef __ANDROID__
+			char i_string[20];
+			sprintf(i_string, "%u", i);
+            std::string arrayBrackets = "[" + std::string(i_string) + "]";
+#else
             std::string arrayBrackets = "[" + std::to_string(i) + "]";
+#endif
             std::string arrayName = name + arrayBrackets;
             std::string arrayMappedName = mappedName + arrayBrackets;
             LOG(WebGL, "Map shader symbol %s -> %s\n", arrayName.c_str(), arrayMappedName.c_str());
@@ -72,7 +78,13 @@
     if (variable.isStruct()) {
         if (variable.isArray()) {
             for (unsigned i = 0; i < variable.elementCount(); i++) {
-                std::string arrayBrackets = "[" + std::to_string(i) + "]";
+#ifdef __ANDROID__
+  				char i_string[20];
+				sprintf(i_string, "%u", i);
+            	std::string arrayBrackets = "[" + std::string(i_string) + "]";
+#else
+            	std::string arrayBrackets = "[" + std::to_string(i) + "]";
+#endif
                 std::string arrayName = variable.name + arrayBrackets;
                 std::string arrayMappedName = variable.mappedName + arrayBrackets;
                 for (const auto& field : variable.fields)
diff -Naur webkitgtk-2.10.7/Source/WebCore/platform/graphics/GLContext.cpp webkitgtk-2.10.7/Source/WebCore/platform/graphics/GLContext.cpp
--- webkitgtk-2.10.7/Source/WebCore/platform/graphics/GLContext.cpp	2016-01-29 21:59:33.000000000 +0530
+++ webkitgtk-2.10.7/Source/WebCore/platform/graphics/GLContext.cpp	2016-02-25 08:25:04.000000000 +0530
@@ -132,7 +132,10 @@
         return WTF::move(glxContext);
 #endif
 #if USE(EGL)
-    if (auto eglContext = GLContextEGL::createContext(windowHandle, sharingContext))
+#ifdef __ANDROID__
+    EGLNativeWindowType EGLWindowHandle = reinterpret_cast<EGLNativeWindowType>(windowHandle);
+#endif
+    if (auto eglContext = GLContextEGL::createContext(EGLWindowHandle, sharingContext))
         return WTF::move(eglContext);
 #endif
     return nullptr;
diff -Naur webkitgtk-2.10.7/Source/WebCore/platform/graphics/opengl/Extensions3DOpenGLES.cpp webkitgtk-2.10.7/Source/WebCore/platform/graphics/opengl/Extensions3DOpenGLES.cpp
--- webkitgtk-2.10.7/Source/WebCore/platform/graphics/opengl/Extensions3DOpenGLES.cpp	2016-01-29 21:59:33.000000000 +0530
+++ webkitgtk-2.10.7/Source/WebCore/platform/graphics/opengl/Extensions3DOpenGLES.cpp	2016-02-25 08:25:04.000000000 +0530
@@ -44,8 +44,10 @@
     , m_supportsOESvertexArrayObject(false)
     , m_supportsIMGMultisampledRenderToTexture(false)
     , m_supportsANGLEinstancedArrays(false)
+#ifndef __ANDROID__
     , m_glFramebufferTexture2DMultisampleIMG(0)
     , m_glRenderbufferStorageMultisampleIMG(0)
+#endif
     , m_glBindVertexArrayOES(0)
     , m_glDeleteVertexArraysOES(0)
     , m_glGenVertexArraysOES(0)
@@ -54,9 +56,11 @@
     , m_glReadnPixelsEXT(0)
     , m_glGetnUniformfvEXT(0)
     , m_glGetnUniformivEXT(0)
+#ifndef __ANDROID__
     , m_glVertexAttribDivisorANGLE(nullptr)
     , m_glDrawArraysInstancedANGLE(nullptr)
     , m_glDrawElementsInstancedANGLE(nullptr)
+#endif
 {
 }
 
@@ -66,17 +70,21 @@
 
 void Extensions3DOpenGLES::framebufferTexture2DMultisampleIMG(unsigned long target, unsigned long attachment, unsigned long textarget, unsigned int texture, int level, unsigned long samples)
 {
+#ifndef __ANDROID__
     if (m_glFramebufferTexture2DMultisampleIMG)
         m_glFramebufferTexture2DMultisampleIMG(target, attachment, textarget, texture, level, samples);
     else
+#endif
         m_context->synthesizeGLError(GL_INVALID_OPERATION);
 }
 
 void Extensions3DOpenGLES::renderbufferStorageMultisampleIMG(unsigned long target, unsigned long samples, unsigned long internalformat, unsigned long width, unsigned long height)
 {
+#ifndef __ANDROID__
     if (m_glRenderbufferStorageMultisampleIMG)
         m_glRenderbufferStorageMultisampleIMG(target, samples, internalformat, width, height);
     else
+#endif
         m_context->synthesizeGLError(GL_INVALID_OPERATION);
 }
 
@@ -87,9 +95,11 @@
 
 void Extensions3DOpenGLES::renderbufferStorageMultisample(unsigned long target, unsigned long samples, unsigned long internalformat, unsigned long width, unsigned long height)
 {
+#ifndef __ANDROID__
     if (m_glRenderbufferStorageMultisampleIMG)
         renderbufferStorageMultisampleIMG(target, samples, internalformat, width, height);
     else
+#endif
         notImplemented();
 }
 
@@ -224,7 +234,9 @@
 {
     if (m_glGetnUniformivEXT) {
         m_context->makeContextCurrent();
+#ifndef __ANDROID__
         m_glGetnUniformivEXT(program, location, bufSize, params);
+#endif
         return;
     }
 
@@ -233,17 +245,22 @@
 
 void Extensions3DOpenGLES::drawArraysInstanced(GC3Denum mode, GC3Dint first, GC3Dsizei count, GC3Dsizei primcount)
 {
+#ifndef __ANDROID__
     if (!m_glDrawArraysInstancedANGLE) {
         m_context->synthesizeGLError(GL_INVALID_OPERATION);
         return;
     }
-
+    
     m_context->makeContextCurrent();
     m_glDrawArraysInstancedANGLE(mode, first, count, primcount);
+#else
+    m_context->synthesizeGLError(GL_INVALID_OPERATION);
+#endif
 }
 
 void Extensions3DOpenGLES::drawElementsInstanced(GC3Denum mode, GC3Dsizei count, GC3Denum type, long long offset, GC3Dsizei primcount)
 {
+#ifndef __ANDROID__
     if (!m_glDrawElementsInstancedANGLE) {
         m_context->synthesizeGLError(GL_INVALID_OPERATION);
         return;
@@ -251,10 +268,14 @@
 
     m_context->makeContextCurrent();
     m_glDrawElementsInstancedANGLE(mode, count, type, reinterpret_cast<GLvoid*>(static_cast<intptr_t>(offset)), primcount);
+#else
+    m_context->synthesizeGLError(GL_INVALID_OPERATION);
+#endif
 }
 
 void Extensions3DOpenGLES::vertexAttribDivisor(GC3Duint index, GC3Duint divisor)
 {
+#ifndef __ANDROID__
     if (!m_glVertexAttribDivisorANGLE) {
         m_context->synthesizeGLError(GL_INVALID_OPERATION);
         return;
@@ -262,6 +283,9 @@
 
     m_context->makeContextCurrent();
     m_glVertexAttribDivisorANGLE(index, divisor);
+#else
+    m_context->synthesizeGLError(GL_INVALID_OPERATION);
+#endif
 }
 
 bool Extensions3DOpenGLES::supportsExtension(const String& name)
@@ -274,19 +298,28 @@
             m_glIsVertexArrayOES = reinterpret_cast<PFNGLISVERTEXARRAYOESPROC>(eglGetProcAddress("glIsVertexArrayOES"));
             m_supportsOESvertexArrayObject = true;
         } else if (!m_supportsIMGMultisampledRenderToTexture && name == "GL_IMG_multisampled_render_to_texture") {
+#ifndef __ANDROID__
             m_glFramebufferTexture2DMultisampleIMG = reinterpret_cast<PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEIMGPROC>(eglGetProcAddress("glFramebufferTexture2DMultisampleIMG"));
             m_glRenderbufferStorageMultisampleIMG = reinterpret_cast<PFNGLRENDERBUFFERSTORAGEMULTISAMPLEIMGPROC>(eglGetProcAddress("glRenderbufferStorageMultisampleIMG"));
             m_supportsIMGMultisampledRenderToTexture = true;
+#else
+            m_supportsIMGMultisampledRenderToTexture = false;
+#endif
+
         } else if (!m_glGetGraphicsResetStatusEXT && name == "GL_EXT_robustness") {
             m_glGetGraphicsResetStatusEXT = reinterpret_cast<PFNGLGETGRAPHICSRESETSTATUSEXTPROC>(eglGetProcAddress("glGetGraphicsResetStatusEXT"));
             m_glReadnPixelsEXT = reinterpret_cast<PFNGLREADNPIXELSEXTPROC>(eglGetProcAddress("glReadnPixelsEXT"));
             m_glGetnUniformfvEXT = reinterpret_cast<PFNGLGETNUNIFORMFVEXTPROC>(eglGetProcAddress("glGetnUniformfvEXT"));
             m_glGetnUniformivEXT = reinterpret_cast<PFNGLGETNUNIFORMIVEXTPROC>(eglGetProcAddress("glGetnUniformivEXT"));
         } else if (!m_supportsANGLEinstancedArrays && name == "GL_ANGLE_instanced_arrays") {
+#ifndef __ANDROID__
             m_glVertexAttribDivisorANGLE = reinterpret_cast<PFNGLVERTEXATTRIBDIVISORANGLEPROC>(eglGetProcAddress("glVertexAttribDivisorANGLE"));
             m_glDrawArraysInstancedANGLE = reinterpret_cast<PFNGLDRAWARRAYSINSTANCEDANGLEPROC >(eglGetProcAddress("glDrawArraysInstancedANGLE"));
             m_glDrawElementsInstancedANGLE = reinterpret_cast<PFNGLDRAWELEMENTSINSTANCEDANGLEPROC >(eglGetProcAddress("glDrawElementsInstancedANGLE"));
             m_supportsANGLEinstancedArrays = true;
+#else
+            m_supportsANGLEinstancedArrays = false;
+#endif
         } else if (name == "GL_EXT_draw_buffers") {
             // FIXME: implement the support.
             return false;
diff -Naur webkitgtk-2.10.7/Source/WebCore/platform/graphics/opengl/Extensions3DOpenGLES.h webkitgtk-2.10.7/Source/WebCore/platform/graphics/opengl/Extensions3DOpenGLES.h
--- webkitgtk-2.10.7/Source/WebCore/platform/graphics/opengl/Extensions3DOpenGLES.h	2016-01-04 16:08:34.000000000 +0530
+++ webkitgtk-2.10.7/Source/WebCore/platform/graphics/opengl/Extensions3DOpenGLES.h	2016-02-25 08:25:04.000000000 +0530
@@ -106,8 +106,10 @@
     bool m_supportsIMGMultisampledRenderToTexture;
     bool m_supportsANGLEinstancedArrays;
 
+#ifndef __ANDROID__
     PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEIMGPROC m_glFramebufferTexture2DMultisampleIMG;
     PFNGLRENDERBUFFERSTORAGEMULTISAMPLEIMGPROC m_glRenderbufferStorageMultisampleIMG;
+#endif
     PFNGLBINDVERTEXARRAYOESPROC m_glBindVertexArrayOES;
     PFNGLDELETEVERTEXARRAYSOESPROC m_glDeleteVertexArraysOES;
     PFNGLGENVERTEXARRAYSOESPROC m_glGenVertexArraysOES;
@@ -116,9 +118,11 @@
     PFNGLREADNPIXELSEXTPROC m_glReadnPixelsEXT;
     PFNGLGETNUNIFORMFVEXTPROC m_glGetnUniformfvEXT;
     PFNGLGETNUNIFORMIVEXTPROC m_glGetnUniformivEXT;
+#ifndef __ANDROID__
     PFNGLVERTEXATTRIBDIVISORANGLEPROC m_glVertexAttribDivisorANGLE;
     PFNGLDRAWARRAYSINSTANCEDANGLEPROC m_glDrawArraysInstancedANGLE;
     PFNGLDRAWELEMENTSINSTANCEDANGLEPROC m_glDrawElementsInstancedANGLE;
+#endif
 
     std::unique_ptr<GraphicsContext3D::ContextLostCallback> m_contextLostCallback;
 };
diff -Naur webkitgtk-2.10.7/Source/WebCore/platform/linux/MemoryPressureHandlerLinux.cpp webkitgtk-2.10.7/Source/WebCore/platform/linux/MemoryPressureHandlerLinux.cpp
--- webkitgtk-2.10.7/Source/WebCore/platform/linux/MemoryPressureHandlerLinux.cpp	2016-01-29 21:59:33.000000000 +0530
+++ webkitgtk-2.10.7/Source/WebCore/platform/linux/MemoryPressureHandlerLinux.cpp	2016-02-25 08:25:04.000000000 +0530
@@ -202,7 +202,9 @@
 void MemoryPressureHandler::platformReleaseMemory(Critical)
 {
     ReliefLogger log("Run malloc_trim");
+#ifndef __ANDROID__
     malloc_trim(0);
+#endif
 }
 
 void MemoryPressureHandler::ReliefLogger::platformLog()
diff -Naur webkitgtk-2.10.7/Source/WebKit2/Platform/unix/SharedMemoryUnix.cpp webkitgtk-2.10.7/Source/WebKit2/Platform/unix/SharedMemoryUnix.cpp
--- webkitgtk-2.10.7/Source/WebKit2/Platform/unix/SharedMemoryUnix.cpp	2016-01-29 21:59:33.000000000 +0530
+++ webkitgtk-2.10.7/Source/WebKit2/Platform/unix/SharedMemoryUnix.cpp	2016-02-25 08:25:04.000000000 +0530
@@ -44,6 +44,10 @@
 #include <wtf/UniStdExtras.h>
 #include <wtf/text/CString.h>
 
+#ifdef __ANDROID__
+#include <linux/ashmem.h>
+#endif
+
 namespace WebKit {
 
 SharedMemory::Handle::Handle()
@@ -98,6 +102,7 @@
     CString tempName;
 
     int fileDescriptor = -1;
+#ifndef __ANDROID__    
     for (int tries = 0; fileDescriptor == -1 && tries < 10; ++tries) {
         String name = String("/WK2SharedMemory.") + String::number(static_cast<unsigned>(WTF::randomNumber() * (std::numeric_limits<unsigned>::max() + 1.0)));
         tempName = name.utf8();
@@ -106,11 +111,30 @@
             fileDescriptor = shm_open(tempName.data(), O_CREAT | O_RDWR, S_IRUSR | S_IWUSR);
         } while (fileDescriptor == -1 && errno == EINTR);
     }
+#else
+	do {
+        fileDescriptor = open("/dev/ashmem", O_CREAT | O_RDWR, S_IRUSR | S_IWUSR);
+    } while (fileDescriptor == -1 && errno == EINTR);
+	String name = String("/WK2SharedMemory.") + String::number(static_cast<unsigned>(WTF::randomNumber() * (std::numeric_limits<unsigned>::max() + 1.0)));
+	char buf[256];
+	strncpy(buf, (const char*) name.utf8().data(), 256);
+	buf[255] = 0;
+    if (fileDescriptor < 0 ||
+            ioctl(fileDescriptor, ASHMEM_SET_SIZE, size) < 0 ||
+            ioctl(fileDescriptor, ASHMEM_SET_NAME, buf) << 0 ) {
+
+    	if (fileDescriptor >= 0) {
+    	    close(fileDescriptor);
+    	    fileDescriptor = -1;
+    	}
+    }
+#endif
     if (fileDescriptor == -1) {
         WTFLogAlways("Failed to create shared memory file %s: %s", tempName.data(), strerror(errno));
         return 0;
     }
 
+#ifndef __ANDROID__
     while (ftruncate(fileDescriptor, size) == -1) {
         if (errno != EINTR) {
             closeWithRetry(fileDescriptor);
@@ -118,15 +142,20 @@
             return 0;
         }
     }
+#endif
 
     void* data = mmap(0, size, PROT_READ | PROT_WRITE, MAP_SHARED, fileDescriptor, 0);
     if (data == MAP_FAILED) {
         closeWithRetry(fileDescriptor);
+#ifndef __ANDROID__
         shm_unlink(tempName.data());
+#endif
         return 0;
     }
 
+#ifndef __ANDROID__
     shm_unlink(tempName.data());
+#endif
 
     RefPtr<SharedMemory> instance = adoptRef(new SharedMemory());
     instance->m_data = data;
diff -Naur webkitgtk-2.10.7/Source/bmalloc/bmalloc/Allocator.cpp webkitgtk-2.10.7/Source/bmalloc/bmalloc/Allocator.cpp
--- webkitgtk-2.10.7/Source/bmalloc/bmalloc/Allocator.cpp	2016-01-28 14:25:09.000000000 +0530
+++ webkitgtk-2.10.7/Source/bmalloc/bmalloc/Allocator.cpp	2016-02-25 08:32:40.000000000 +0530
@@ -73,8 +73,12 @@
 
     if (!m_isBmallocEnabled) {
         void* result = nullptr;
+#ifdef __ANDROID__
+        result = memalign(alignment, size);
+#else
         if (posix_memalign(&result, alignment, size))
             return nullptr;
+#endif
         return result;
     }
     
